{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ritika/Documents/Discord-clone/discord-clone/src/chat.js\",\n    _s = $RefreshSig$();\n\n// import { AddCircle, CardGiftcard, EmojiEmotions } from '@material-ui/icons'\nimport React, { useState, useEffect } from 'react';\nimport \"./chat.css\";\nimport Message from \"./Message.js\";\nimport ChatHeader from \"./ChatHeader.js\";\nimport SendRoundedIcon from '@material-ui/icons/SendRounded';\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport GifIcon from \"@material-ui/icons/Gif\";\nimport CardGiftcardIcon from \"@material-ui/icons/CardGiftcard\";\nimport EmojiEmotionsIcon from \"@material-ui/icons/EmojiEmotions\";\nimport { useSelector } from 'react-redux';\nimport { selectChannelId, selectChannelName } from './features/counter/AppSlice';\nimport { selectUser } from './features/counter/UserSlice';\nimport { MessageSharp } from '@material-ui/icons';\n\nfunction Chat() {\n  _s();\n\n  const user = useSelector(selectUser);\n  const channel_id = useSelector(selectChannelId);\n  const channel_name = useSelector(selectChannelName);\n  const [messageInput, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    if (channel_id) {\n      db.collection('channels').doc(channel_id).collection(\"message\").orderBy(\"timestamp\", \"desc\").onSnapshot(snapshot => setMessages(snapshot.docs.map(doc => doc.data())));\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat_section\",\n    children: [/*#__PURE__*/_jsxDEV(ChatHeader, {\n      channelName: channel_name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat_messages\",\n      children: messages.map(message => /*#__PURE__*/_jsxDEV(Message, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat_input_message\",\n      children: [/*#__PURE__*/_jsxDEV(AddCircleIcon, {\n        fontSize: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: messageInput,\n          disabled: !channel_id,\n          onChange: e => setInput(e.target.value),\n          className: \"message_input\",\n          placeholder: `Input text here ${channel_name}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: !channel_id,\n          className: \"chat_input_button\",\n          type: \"submit\",\n          children: /*#__PURE__*/_jsxDEV(SendRoundedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 65\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat_input_icons\",\n        children: [/*#__PURE__*/_jsxDEV(CardGiftcardIcon, {\n          fontSize: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(GifIcon, {\n          fontSize: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(EmojiEmotionsIcon, {\n          fontSize: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Chat, \"jK17LzzrvasRtxrvwtcndHAdcU4=\", false, function () {\n  return [useSelector, useSelector, useSelector];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/home/ritika/Documents/Discord-clone/discord-clone/src/chat.js"],"names":["React","useState","useEffect","Message","ChatHeader","SendRoundedIcon","AddCircleIcon","GifIcon","CardGiftcardIcon","EmojiEmotionsIcon","useSelector","selectChannelId","selectChannelName","selectUser","MessageSharp","Chat","user","channel_id","channel_name","messageInput","setInput","messages","setMessages","db","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","message","e","target","value"],"mappings":"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","sourcesContent":["// import { AddCircle, CardGiftcard, EmojiEmotions } from '@material-ui/icons'\nimport\tReact, { useState ,useEffect } from 'react'\nimport \"./chat.css\"\nimport Message from \"./Message.js\"\nimport ChatHeader from \"./ChatHeader.js\"\nimport  SendRoundedIcon from '@material-ui/icons/SendRounded'\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\"\nimport GifIcon from \"@material-ui/icons/Gif\"\nimport CardGiftcardIcon from \"@material-ui/icons/CardGiftcard\"\nimport EmojiEmotionsIcon from \"@material-ui/icons/EmojiEmotions\"\nimport { useSelector } from 'react-redux'\nimport { selectChannelId, selectChannelName } from './features/counter/AppSlice'\nimport { selectUser } from './features/counter/UserSlice'\nimport { MessageSharp } from '@material-ui/icons'\n\n\nfunction Chat() \n    {\n        const user = useSelector(selectUser);\n        const channel_id=useSelector(selectChannelId);\n        const channel_name=useSelector(selectChannelName);\n        const [messageInput,setInput]=useState(\"\");\n        const [messages,setMessages]=useState([]);\n\n        useEffect(() => {\n            if(channel_id)\n            {\n                db.collection('channels').doc(channel_id).collection(\"message\").orderBy(\n                    \"timestamp\",\"desc\"\n                ).onSnapshot(snapshot=>(\n                    setMessages(snapshot.docs.map((doc)=>doc.data()))\n                ));\n            }\n          \n        }, [])\n\n        return (\n            <div className=\"chat_section\">\n                {/* <h3>this is the chat sec</h3> */}\n            {/* {*Chat*} */}\n            <ChatHeader channelName={channel_name}/>\n            <div className=\"chat_messages\">\n                {\n                    messages.map((message)=>(\n                        <Message/>\n                    ))\n                }\n                {/* <Message message={message} channelName={channel_name} /> */}\n                </div>\n            <div className=\"chat_input_message\">\n                <AddCircleIcon fontSize=\"large\"/>\n                <form>\n                    <input value={messageInput} \n                    disabled={!channel_id}\n                    onChange={(e)=>setInput(e.target.value)} \n                    className =\"message_input\" placeholder={`Input text here ${channel_name}`}/>  \n                    {/* <SendRoundedIcon/> */}\n                    <button \n                    disabled={!channel_id}\n                    className=\"chat_input_button\" type=\"submit\"><SendRoundedIcon/></button>\n                </form>\n                <div className=\"chat_input_icons\">\n                    <CardGiftcardIcon fontSize=\"large\"/>\n                    <GifIcon fontSize=\"large\"/>\n                    <EmojiEmotionsIcon fontSize=\"large\"/>\n                    </div>\n                </div>\n             </div>)\n    }\nexport default Chat\n"]},"metadata":{},"sourceType":"module"}