[{"/home/ritika/Documents/Discord-clone/discord-clone/src/index.js":"1","/home/ritika/Documents/Discord-clone/discord-clone/src/App.js":"2","/home/ritika/Documents/Discord-clone/discord-clone/src/serviceWorker.js":"3","/home/ritika/Documents/Discord-clone/discord-clone/src/app/store.js":"4","/home/ritika/Documents/Discord-clone/discord-clone/src/sidebar.js":"5","/home/ritika/Documents/Discord-clone/discord-clone/src/SidebarChannel.js":"6","/home/ritika/Documents/Discord-clone/discord-clone/src/chat.js":"7","/home/ritika/Documents/Discord-clone/discord-clone/src/ChatHeader.js":"8","/home/ritika/Documents/Discord-clone/discord-clone/src/Message.js":"9","/home/ritika/Documents/Discord-clone/discord-clone/src/features/counter/UserSlice.js":"10","/home/ritika/Documents/Discord-clone/discord-clone/src/features/counter/AppSlice.js":"11","/home/ritika/Documents/Discord-clone/discord-clone/src/Login.js":"12","/home/ritika/Documents/Discord-clone/discord-clone/src/firebase.js":"13"},{"size":644,"mtime":1607004386147,"results":"14","hashOfConfig":"15"},{"size":6893,"mtime":1607245783869,"results":"16","hashOfConfig":"15"},{"size":5141,"mtime":1607004386148,"results":"17","hashOfConfig":"15"},{"size":270,"mtime":1607073187253,"results":"18","hashOfConfig":"15"},{"size":3427,"mtime":1607099733533,"results":"19","hashOfConfig":"15"},{"size":746,"mtime":1607237471400,"results":"20","hashOfConfig":"15"},{"size":3500,"mtime":1607245084439,"results":"21","hashOfConfig":"15"},{"size":1489,"mtime":1607238711256,"results":"22","hashOfConfig":"15"},{"size":586,"mtime":1607246756990,"results":"23","hashOfConfig":"15"},{"size":599,"mtime":1607089771664,"results":"24","hashOfConfig":"15"},{"size":2429,"mtime":1607238253411,"results":"25","hashOfConfig":"15"},{"size":755,"mtime":1607087123244,"results":"26","hashOfConfig":"15"},{"size":686,"mtime":1607071593579,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"125jl0o",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/home/ritika/Documents/Discord-clone/discord-clone/src/index.js",[],["56","57"],"/home/ritika/Documents/Discord-clone/discord-clone/src/App.js",[],"/home/ritika/Documents/Discord-clone/discord-clone/src/serviceWorker.js",[],"/home/ritika/Documents/Discord-clone/discord-clone/src/app/store.js",[],"/home/ritika/Documents/Discord-clone/discord-clone/src/sidebar.js",[],"/home/ritika/Documents/Discord-clone/discord-clone/src/SidebarChannel.js",[],"/home/ritika/Documents/Discord-clone/discord-clone/src/chat.js",["58"],"// import { AddCircle, CardGiftcard, EmojiEmotions } from '@material-ui/icons'\nimport\tReact, { useState ,useEffect } from 'react'\nimport \"./chat.css\"\nimport Message from \"./Message.js\"\nimport ChatHeader from \"./ChatHeader.js\"\nimport  SendRoundedIcon from '@material-ui/icons/SendRounded'\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\"\nimport GifIcon from \"@material-ui/icons/Gif\"\nimport CardGiftcardIcon from \"@material-ui/icons/CardGiftcard\"\nimport EmojiEmotionsIcon from \"@material-ui/icons/EmojiEmotions\"\nimport { useSelector } from 'react-redux'\nimport { selectChannelId, selectChannelName } from './features/counter/AppSlice'\nimport { selectUser } from './features/counter/UserSlice'\nimport db from \"./firebase\"\nimport firebase from \"firebase\"\n\nfunction Chat() \n    {\n        const user = useSelector(selectUser);\n        const channel_id=useSelector(selectChannelId);\n        const channel_name=useSelector(selectChannelName);\n        const [messageInput,setInput]=useState(\"\");\n        const [messages,setMessages]=useState([]);\n\n        useEffect(() => {\n            if(channel_id)\n            {\n                db.collection('channels').doc(channel_id).collection(\"message\").orderBy(\n                    \"timestamp\",\"desc\"\n                ).onSnapshot((snapshot)=>(\n                    setMessages(snapshot.docs.map((doc)=>doc.data()))\n                ));\n            }\n          \n        }, [])\n\n\n        const sendMessage=(e)=>{\n            e.preventDefault();\n\n            db.collection(\"channels\").doc(channel_id).collection(\"message\").add({\n                message:messageInput,\n                user:user,\n                timestamp:firebase.firestore.FieldValue.serverTimestamp()\n            });\n            \n            console.log(\"msg component\")\n            setInput(\"\")//to again set the message field to null\n        }\n        console.log(messages)\n\n        return (\n            <div className=\"chat_section\">\n                {/* <h3>this is the chat sec</h3> */}\n            {/* {*Chat*} */}\n            <ChatHeader channelName={channel_name}/>\n            <div className=\"chat_messages\">\n                {\n                    messages.map((message)=>(\n                        <Message\n                        message={message.message}\n                        user={message.user}\n                        timestamp={message.timestamp}\n                        />\n                    ))\n                }\n                {/* <Message message={message} channelName={channel_name} /> */}\n                </div>\n            <div className=\"chat_input_message\">\n                <AddCircleIcon fontSize=\"large\"/>\n                <form>\n                    <input value={messageInput} \n                    disabled={!channel_id}\n                    onChange={(e)=>setInput(e.target.value)} \n                    className =\"message_input\" placeholder={`Input text here ${channel_name}`}/>  \n                    {/* <SendRoundedIcon/> */}\n                    <button \n                    disabled={!channel_id}\n                    onClick={sendMessage}\n                    className=\"chat_input_button\" type=\"submit\"><SendRoundedIcon/></button>\n                </form>\n                <div className=\"chat_input_icons\">\n                    <CardGiftcardIcon fontSize=\"large\"/>\n                    <GifIcon fontSize=\"large\"/>\n                    <EmojiEmotionsIcon fontSize=\"large\"/>\n                    </div>\n                </div>\n             </div>)\n    }\nexport default Chat\n","/home/ritika/Documents/Discord-clone/discord-clone/src/ChatHeader.js",[],"/home/ritika/Documents/Discord-clone/discord-clone/src/Message.js",[],"/home/ritika/Documents/Discord-clone/discord-clone/src/features/counter/UserSlice.js",[],"/home/ritika/Documents/Discord-clone/discord-clone/src/features/counter/AppSlice.js",[],"/home/ritika/Documents/Discord-clone/discord-clone/src/Login.js",[],"/home/ritika/Documents/Discord-clone/discord-clone/src/firebase.js",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":35,"column":12,"nodeType":"65","endLine":35,"endColumn":14,"suggestions":"66"},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'channel_id'. Either include it or remove the dependency array.","ArrayExpression",["69"],"no-global-assign","no-unsafe-negation",{"desc":"70","fix":"71"},"Update the dependencies array to be: [channel_id]",{"range":"72","text":"73"},[1411,1413],"[channel_id]"]